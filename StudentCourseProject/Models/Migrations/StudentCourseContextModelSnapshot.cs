// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentCourseProject.Models;

namespace StudentCourseProject.Migrations
{
    [DbContext(typeof(StudentCourseContext))]
    partial class StudentCourseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("StudentCourseProject.Models.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Math",
                            CreatedDate = new DateTime(2021, 1, 15, 15, 34, 53, 492, DateTimeKind.Local).AddTicks(8030),
                            EndDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "Programming",
                            CreatedDate = new DateTime(2021, 1, 15, 15, 34, 53, 527, DateTimeKind.Local).AddTicks(3281),
                            EndDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Data Structures",
                            CreatedDate = new DateTime(2021, 1, 15, 15, 34, 53, 527, DateTimeKind.Local).AddTicks(3551),
                            EndDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StudentCourseProject.Models.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CourseIdentificationCourseId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseIdentificationCourseId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentCourseProject.Models.Entities.Student", b =>
                {
                    b.HasOne("StudentCourseProject.Models.Entities.Course", "CourseIdentification")
                        .WithMany()
                        .HasForeignKey("CourseIdentificationCourseId");

                    b.Navigation("CourseIdentification");
                });
#pragma warning restore 612, 618
        }
    }
}
